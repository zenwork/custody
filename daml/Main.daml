module Main where

import Daml.Script
import Artwork
import Fractional
import Wallet


-- TEST 1
e2e_test_1 : Script ()
e2e_test_1 = do

  -- parties
  carlos <-  allocateParty "Carlos the Collector"
  acme <- allocateParty "Acme Shipping"
  storage <- allocateParty "Big Box Storage"
  custodian <- allocateParty "Digital Marketplace"
  inspector <- allocateParty "Professor Smith"
  ian <- allocateParty "Ian Investor"

  -- wallets
  ianWallet <- submit ian do createCmd (walletFor (ian)) 
  carlosWallet <- submit carlos do createCmd (walletFor (carlos)) 
  inspectorWallet <- submit inspector do createCmd (walletFor (inspector)) 

  -- create artwork
  picasso <- submit carlos do createCmd (artworkFor (carlos, "Les Femmes d'Alger"))

  -- bring artwork into custody
  picasso <- submit carlos do exerciseCmd picasso ReleaseToShipper with shipper = acme
  picasso <- submit acme do exerciseCmd picasso ReleaseToStorage with storage = storage
  picasso <- submit storage do exerciseCmd picasso SetInspector with expert = inspector
  picasso <- submit inspector do exerciseCmd picasso IsAuthentic with inspection = True
  picasso <- submit storage do exerciseCmd picasso ReleaseToCustodian with custodian = custodian

  -- tokenize artwork
  pool <- submit custodian do exerciseCmd picasso Tokenise

  -- mint tokens
  (pool, token1) <- submit custodian do exerciseCmd pool MintToken with {buyer = ian}
  ianWallet <- submit ian do exerciseCmd ianWallet Put with {token = token1}

  (pool, token2)  <- submit custodian do exerciseCmd pool MintToken with {buyer = carlos}
  carlosWallet <- submit carlos do exerciseCmd carlosWallet Put with {token = token2}

  (pool, token3)  <- submit custodian do exerciseCmd pool MintToken with {buyer = inspector}
  inspectorWallet <- submit inspector do exerciseCmd inspectorWallet Put with {token = token3}
  
  -- marketplace transactions
  trx <- submit carlos do createCmd (transfer (carlos, ian, token2,10))  
  trx <- submit carlos do exerciseCmd trx GiveToken
  trx <- submit ian do exerciseCmd trx TakeToken
  trx <- submit carlos do exerciseCmd trx GetPayment

  trx <- submit inspector do createCmd (transfer (inspector, ian, token3, 10))  
  trx <- submit inspector do exerciseCmd trx GiveToken
  trx <- submit ian do exerciseCmd trx TakeToken
  trx <- submit inspector do exerciseCmd trx GetPayment

  return ()
